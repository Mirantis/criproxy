deployment_test: &deployment_test
  docker:
  - image: ishvedunov/criproxy-build:0.0.3
  steps:
  - setup-remote-docker
  - checkout
  - run:
      name: Set up the environment
      command: |
        # Install Docker client
        curl -sSL -o "/tmp/docker-${DOCKER_VERSION}.tgz" "https://get.docker.com/builds/Linux/x86_64/docker-${DOCKER_VERSION}.tgz"
        tar -xz -C /tmp -f "/tmp/docker-${DOCKER_VERSION}.tgz"
        mv /tmp/docker/* /usr/bin

        # Start port forwarder
        test/portforward.sh start
  - attach_workspace:
      at: _output
  - run:
      name: Run deployment test script
      # FIXME: extra "$(...)" is needed because globbing fails
      # in this CircleCI command for some reason
      command: |
        test/portforward.sh 8080&
        # FIXME: rm this ls -l
        SKIP_SNAPSHOT=1 \
          CRIPROXY_DEB="$(echo "${PWD}"/_output/criproxy*nodeps*.deb)" \
          test/deployment-test.sh

version: 2
jobs:
  build:
    docker:
    - image: ishvedunov/criproxy-build:0.0.3
    steps:
    - checkout
    - run:
        name: Place the source
        command: |
          rm -rf /go/src/github.com/Mirantis/criproxy
          cp -av . /go/src/github.com/Mirantis/criproxy
          cd /go/src/github.com/Mirantis/criproxy
    - run:
        name: Build package
        command: |
          cd /go/src/github.com/Mirantis/criproxy
          ./build-package.sh
          mkdir -p _output/
          mv ../criproxy*.deb _output/
          mv criproxy _output/
    - run:
        name: Run tests
        command: |
          cd /go/src/github.com/Mirantis/criproxy
          go test -race -v ./pkg/...
    - persist_to_workspace:
        root: /go/src/github.com/Mirantis/criproxy/_output
        paths:
        - criproxy*.deb
        - criproxy
    - store_artifacts:
        path: /go/src/github.com/Mirantis/criproxy/_output
        destination: criproxy

  publish:
    docker:
    - image: ishvedunov/criproxy-build:0.0.3
    steps:
    - checkout
    - attach_workspace:
        at: _output
    - run:
        name: Publish packages and binaries
        command: |
          ghr -u Mirantis -delete "${CIRCLE_TAG}" _output/

  deployment-test-1.8:
    <<: *deployment_test
    environment:
      DOCKER_VERSION: "17.03.0-ce"
      K8S_VERSION: "1.8"

  deployment-test-1.9:
    <<: *deployment_test
    environment:
      DOCKER_VERSION: "17.03.0-ce"
      K8S_VERSION: "1.9"

workflows:
  version: 2
  build-test-and-publish:
    jobs:
    - build:
        filters:
          tags:
            only: /^v.*/
          branches:
            only: /.*/
    - deployment-test-1.8:
        requires:
        - build
        filters:
          tags:
            only: /^v.*/
          branches:
            only: /.*/
    - deployment-test-1.9:
        requires:
        - build
        filters:
          tags:
            only: /^v.*/
          branches:
            only: /.*/

    - publish:
        requires:
        - build
        - deployment-test-1.8
        - deployment-test-1.9
        filters:
          tags:
            only: /v.*/
          branches:
            ignore: /.*/
